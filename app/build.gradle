plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    //id 'kotlin-android-extensions'
    id 'kotlin-parcelize'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.assignment.photogallery"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))

    buildTypes {
        debug {
            buildConfigField("String", "ACCESS_KEY", "\"" + localProperties['AccessKey'] + "\"")
            buildConfigField("String", "SECRET_KEY", "\"" + localProperties['SecretKey'] + "\"")
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    implementation("androidx.cardview:cardview:1.0.0")
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Hilt testing
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Retrofit for networking

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    //MockWebserver
    testImplementation('com.squareup.okhttp3:mockwebserver:4.9.1')

    //Paging
    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    // Gson Converter
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // unsplash-photopicker-android
    implementation 'com.github.unsplash:unsplash-photopicker-android:1.0.1'
    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Timber
    implementation 'com.jakewharton.timber:timber:5.0.1'

    // Leak Canary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    // Java language implementation
    implementation "androidx.fragment:fragment:1.4.1"
    // Kotlin
    implementation "androidx.fragment:fragment-ktx:1.4.1"
    // Testing Fragments in Isolation
    debugImplementation "androidx.fragment:fragment-testing:1.4.1"

    testImplementation "org.robolectric:robolectric:4.5.1"

    // Mock the object
    testImplementation "io.mockk:mockk:1.10.0"
    androidTestImplementation "io.mockk:mockk-android:1.10.0"

    androidTestImplementation "androidx.test:core:1.4.1"
    androidTestImplementation "androidx.test.ext:junit:1.1.4-alpha06@aar"
    androidTestImplementation "androidx.test:runner:1.5.0-alpha03@aar"

    // Needed for unit testing API
    testImplementation "androidx.arch.core:core-testing:2.1.0"
}